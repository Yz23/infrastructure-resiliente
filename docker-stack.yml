version: '3.3'

services:

  elastic-client:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    configs:
      - source: elastic_config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    # healthcheck:
      # test: curl -fs http://localhost:9200/_cat/health || exit 1
      # interval: 30s
      # timeout: 5s
      # retries: 3
      # start_period: 45s
    environment:
      - 'ES_JAVA_OPTS=-Xms1G -Xmx1G'
      - 'ELASTIC_PASSWORD=changeme'
      - 'cluster.name=cluster-{{index .Service.Labels "namespace"}}'
      - 'node.name={{.Service.Name}}-{{.Task.Slot}}'
      - 'discovery.type=zen'
      - 'discovery.seed_hosts=elastic-master'
      - 'cluster.initial_master_nodes={{index .Service.Labels "namespace"}}_elastic-master-1,{{index .Service.Labels "namespace"}}_elastic-master-2'  
      - 'node.master=false'
      - 'node.data=false'
      - 'node.ingest=false'
      - 'xpack.monitoring.enabled=true'     
      - 'xpack.ml.enabled=false'
    networks:
      - elk
    deploy:
      mode: 'replicated'
      replicas: 2
      update_config:
        parallelism: 1
        delay: 60s
        failure_action: rollback     
      resources:
        limits:
          memory: 16G
        reservations:
          memory: 8G
    
          
  elastic-master:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    configs:
      - source: elastic_config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - 'ES_JAVA_OPTS=-Xms1G -Xmx1G'
      - 'ELASTIC_PASSWORD=changeme'
      - 'cluster.name=cluster-{{index .Service.Labels "namespace"}}'
      - 'node.name={{.Service.Name}}-{{.Task.Slot}}'
      - 'discovery.type=zen'
      - 'discovery.seed_hosts=elastic-master'
      - 'cluster.initial_master_nodes={{index .Service.Labels "namespace"}}_elastic-master-1,{{index .Service.Labels "namespace"}}_elastic-master-2'
      - 'node.master=true'
      - 'node.data=false'
      - 'node.ingest=false'
      - 'xpack.monitoring.enabled=true'     
      - 'xpack.ml.enabled=false'
    networks:
      - elk
    deploy:
      endpoint_mode: dnsrr
      mode: 'replicated'
      replicas: 2
      update_config:
        parallelism: 1
        delay: 60s
        failure_action: rollback          
      resources:
        limits:
          memory: 16G
        reservations:
          memory: 8G
     


  elastic-data:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    configs:
      - source: elastic_config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - 'ES_JAVA_OPTS=-Xms2G -Xmx2G'
      - 'ELASTIC_PASSWORD=changeme'
      - 'cluster.name=cluster-{{index .Service.Labels "namespace"}}'
      - 'node.name={{.Service.Name}}-{{.Task.Slot}}'
      - 'discovery.type=zen'
      - 'discovery.seed_hosts=elastic-master'
      - 'cluster.initial_master_nodes={{index .Service.Labels "namespace"}}_elastic-master-1,{{index .Service.Labels "namespace"}}_elastic-master-2'
      - 'node.master=false'
      - 'node.data=true'
      - 'node.ingest=true'
      - 'xpack.monitoring.enabled=true'     
      - 'xpack.ml.enabled=false'
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - elk
    deploy:
      endpoint_mode: dnsrr
      mode: 'replicated'
      replicas: 4
      placement:
        constraints:
          - node.labels.reserv==datanode
      update_config:
        parallelism: 1
        delay: 120s
        failure_action: rollback          
      resources:
        limits:
          memory: 16G
        reservations:
          memory: 8G



################################################################
#########  Partie ok pour la suite #############################
################################################################
     
  logstash:
    image: docker.elastic.co/logstash/logstash:7.5.0          
    environment:
      - 'LS_JAVA_OPTS=-Xmx4G -Xms4G -Dnetworkaddress.cache.ttl=1'
      - 'node.name={{.Service.Name}}-{{.Task.Slot}}'
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 4
      resources:
        reservations:
          memory: 8G         

  ##############
#  KIBANA NODE #
  ##############
  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.0     
    configs:
      - source: kibana_config
        target: /usr/share/kibana/config/kibana.yml
    environment:
      - 'SERVER_NAME={{.Service.Name}}-{{.Task.Slot}}'   
    networks:
      - elk
      - clusternetwork   
    deploy:
      mode: replicated
      replicas: 2
      labels:
        - 'traefik.backend.loadbalancer.stickiness=true'
        - 'traefik.docker.network=clusternetwork'
        - 'traefik.port=5601'   
        - 'traefik.enable=true'
        - 'traefik.entryPoint=http'
        - 'traefik.backend=kibana_pprod'  
        - 'traefik.frontend.passHostHeader=false'
        - 'traefik.backend.loadbalancer.swarm=false' 
 
configs:

  elastic_config:
    file: ./elasticsearch/config/elasticsearch.yml
  kibana_config:
    file: ./kibana/config/kibana.yml
     

###DEFINE INTERNAL NETWORK    
networks:
  elk:
    external: true
  clusternetwork:
    external: true
###DEFINE MOUNT VOLUME
volumes:
  esdata:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/elasticdata/' 
